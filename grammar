program        → declaration* EOF;

declaration    → varDecl
               | statement;

varDecl        → "var" IDENTIFIER ( "=" expression)? ";" ;

statement      → exprStmt
               | printStmt
               | block ;

blcok          → "{" declaration* "}" ;

exprStmt       → expression ";" ;
printStmt      → "print" expression ";" ;

expression     → assignment ;
assignment     → IDENTIFER "=" assignment
               | comma ;
comma          → conditional ( "," conditional )* ;
conditional    → equality ( "?" conditional ":" conditional )? ;
equality       → comparison ( ( "!=" | "==" ) comparison )* ;
comparison     → term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term           → factor ( ( "-" | "+" ) factor )* ;
factor         → unary ( ( "/" | "*" ) unary )* ;
unary          → ( "!" | "-" ) unary
               | primary ;
primary        → NUMBER | STRING | "true" | "false" | "nil"
               | "(" expression ")"
               | IDENTIFIER
               // error production
               | ( "!=" | "==" ) equality
               | ( ">" | ">=" | "<" | "<=" ) comparison
               | ( "-" | "+" ) term
               | ( "/" | "*" ) factor ;
